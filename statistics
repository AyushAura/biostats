import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats
import statsmodels.api as sm
import statsmodels.formula.api as smf

# Simulate experimental data
np.random.seed(42)
group_A = np.random.normal(loc=5.0, scale=1.0, size=30)
group_B = np.random.normal(loc=5.5, scale=1.2, size=30)
group_C = np.random.normal(loc=6.0, scale=1.1, size=30)

data = pd.DataFrame({
    'value': np.concatenate([group_A, group_B, group_C]),
    'group': ['A']*30 + ['B']*30 + ['C']*30
})

# One-way ANOVA
anova_result = stats.f_oneway(group_A, group_B, group_C)
print("ANOVA Result:", anova_result)

# Correlation matrix
corr_data = pd.DataFrame({
    'Measurement': np.concatenate([group_A, group_B, group_C]),
    'VariableX': np.random.normal(50, 10, 90),
    'VariableY': np.random.normal(100, 20, 90)
})
correlation_matrix = corr_data.corr()
print("\nCorrelation Matrix:\n", correlation_matrix)

# Linear regression
X = corr_data[['VariableX', 'VariableY']]
y = corr_data['Measurement']
X = sm.add_constant(X)
model = sm.OLS(y, X).fit()
print("\nRegression Summary:\n", model.summary())

# t-test between two groups
t_stat, p_val = stats.ttest_ind(group_A, group_B, equal_var=False)
print(f"\nT-Test between Group A and B: t={t_stat:.4f}, p={p_val:.4f}")

# Visualization
sns.boxplot(x='group', y='value', data=data)
plt.title('Group-wise Distribution')
plt.xlabel('Group')
plt.ylabel('Measured Value')
plt.tight_layout()
plt.savefig("group_comparison_plot.png")
plt.show()
